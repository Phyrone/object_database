initSidebarItems({"constant":[["DONT_DELETE","Not configurable. Corresponds to `Object.defineProperty(o, \"p\", { configurable: false })`."],["DONT_ENUM","Not enumerable. Corresponds to `Object.defineProperty(o, \"p\", { enumerable: false })`."],["NONE","No property attributes."],["READ_ONLY","Not writable. Corresponds to `Object.defineProperty(o, \"p\", { writable: false })`."]],"enum":[["ConstructorBehavior","ConstructorBehavior::Allow creates a regular API function."],["DataError",""],["FunctionCodeHandling",""],["IntegrityLevel","Object integrity levels can be used to restrict what can be done to an object’s properties."],["MicrotasksPolicy","Policy for running microtasks:"],["ModuleStatus","The different states a module can be in."],["NewStringType",""],["PromiseHookType","PromiseHook with type Init is called when a new promise is created. When a new promise is created as part of the chain in the case of Promise.then or in the intermediate promises created by Promise.{race, all}/AsyncFunctionAwait, we pass the parent promise otherwise we pass undefined."],["PromiseRejectEvent",""],["PromiseState",""],["SideEffectType","Options for marking whether callbacks may trigger JS-observable side effects. Side-effect-free callbacks are allowlisted during debug evaluation with throwOnSideEffect. It applies when calling a Function, FunctionTemplate, or an Accessor callback. For Interceptors, please see PropertyHandlerFlags’s kHasNoSideEffect. Callbacks that only cause side effects to the receiver are allowlisted if invoked on receiver objects that are created within the same debug-evaluate call, as these objects are temporary and the side effect does not escape."]],"fn":[["boxed_slice_deleter_callback",""],["new_default_allocator","malloc/free based convenience allocator."],["new_default_platform","Returns a new instance of the default v8::Platform implementation."],["new_rust_allocator","Creates an allocator managed by Rust code."],["new_single_threaded_default_platform","The same as new_default_platform() but disables the worker thread pool. It must be used with the –single-threaded V8 flag."],["null",""],["undefined",""],["vec_deleter_callback",""]],"mod":[["V8",""],["icu",""],["inspector","Bindings to the V8 Inspector API. Documentation for the V8 inspector API is very sparse, so here are a few references for the next sorry soul who has to dig into it."],["json","A JSON Parser and Stringifier."],["script_compiler",""]],"struct":[["AccessorSignature","An AccessorSignature specifies which receivers are valid parameters to an accessor callback."],["Allocator","A thread-safe allocator that V8 uses to allocate |ArrayBuffer|’s memory. The allocator is a global V8 setting. It has to be set via Isolate::CreateParams."],["Array","An instance of the built-in array constructor (ECMA-262, 15.4.2)."],["ArrayBuffer","An instance of the built-in ArrayBuffer constructor (ES6 draft 15.13.5)."],["ArrayBufferView","A base class for an instance of one of “views” over ArrayBuffer, including TypedArrays and DataView (ES6 draft 15.13)."],["BackingStore","A wrapper around the backing store (i.e. the raw memory) of an array buffer. See a document linked in http://crbug.com/v8/9908 for more information."],["BigInt","A JavaScript BigInt value (https://tc39.github.io/proposal-bigint)"],["BigInt64Array","An instance of BigInt64Array constructor."],["BigIntObject","A BigInt object (https://tc39.github.io/proposal-bigint)"],["BigUint64Array","An instance of BigUint64Array constructor."],["Boolean","A primitive boolean value (ECMA-262, 4.3.14). Either the true or false value."],["BooleanObject","A Boolean object (ECMA-262, 4.3.15)."],["CallbackScope","A `CallbackScope` can be used to bootstrap a `HandleScope` and `ContextScope` inside a callback function that gets called by V8. Bootstrapping a scope inside a callback is the only valid use case of this type; using it in other places leads to undefined behavior, which is also the reason `CallbackScope::new()` is marked as being an unsafe function."],["CompiledWasmModule","Wrapper around a compiled WebAssembly module, which is potentially shared by different WasmModuleObjects."],["Context","A sandboxed execution context with its own set of built-in objects and functions."],["ContextScope","Stack-allocated class which sets the execution context for all operations executed within a local scope. After entering a context, all code compiled and run is compiled and run in this context."],["CreateParams","Initial configuration parameters for a new Isolate."],["Data","The superclass of objects that can reside on V8’s heap."],["DataView","An instance of DataView constructor (ES6 draft 15.13.7)."],["Date","An instance of the built-in Date constructor (ECMA-262, 15.9)."],["EscapableHandleScope","A HandleScope which first allocates a handle in the current scope which will be later filled with the escape value."],["Exception","Create new error objects by calling the corresponding error object constructor with the message."],["External","A JavaScript value that wraps a C++ void*. This type of value is mainly used to associate C++ data structures with JavaScript objects."],["ExternalReferences",""],["FixedArray","A fixed-sized array with elements of type Data."],["Float32Array","An instance of Float32Array constructor (ES6 draft 15.13.6)."],["Float64Array","An instance of Float64Array constructor (ES6 draft 15.13.6)."],["Function","A JavaScript function object (ECMA-262, 15.3)."],["FunctionBuilder","A builder to construct the properties of a Function or FunctionTemplate."],["FunctionCallbackArguments",""],["FunctionCallbackInfo","The argument information given to function call callbacks.  This class provides access to information about the context of the call, including the receiver, the number and values of arguments, and the holder of the function."],["FunctionTemplate","A FunctionTemplate is used to create functions at runtime. There can only be one function created from a FunctionTemplate in a context. The lifetime of the created function is equal to the lifetime of the context. So in case the embedder needs to create temporary functions that can be collected using Scripts is preferred."],["Global","An object reference that is independent of any handle scope. Where a Local handle only lives as long as the HandleScope in which it was allocated, a global handle remains valid until it is explicitly disposed using reset()."],["HandleScope","A stack-allocated class that governs a number of local handles. After a handle scope has been created, all local handles will be allocated within that handle scope until either the handle scope is deleted or another handle scope is created.  If there is already a handle scope and a new one is created, all allocations will take place in the new handle scope until it is deleted.  After that, new handles will again be allocated in the original handle scope."],["HeapStatistics","Collection of V8 heap information."],["Int16Array","An instance of Int16Array constructor (ES6 draft 15.13.6)."],["Int32","A JavaScript value representing a 32-bit signed integer."],["Int32Array","An instance of Int32Array constructor (ES6 draft 15.13.6)."],["Int8Array","An instance of Int8Array constructor (ES6 draft 15.13.6)."],["Integer","A JavaScript value representing a signed integer."],["Isolate","Isolate represents an isolated instance of the V8 engine.  V8 isolates have completely separate states.  Objects from one isolate must not be used in other isolates.  The embedder can create multiple isolates and use them in parallel in multiple threads.  An isolate can be entered by at most one thread at any given time.  The Locker/Unlocker API must be used to synchronize."],["IsolateHandle","IsolateHandle is a thread-safe reference to an Isolate. It’s main use is to terminate execution of a running isolate from another thread."],["Local","An object reference managed by the v8 garbage collector."],["Location","A location in JavaScript source."],["Map","An instance of the built-in Map constructor (ECMA-262, 6th Edition, 23.1.1)."],["Message","An error message."],["Module","A compiled JavaScript module."],["ModuleRequest",""],["Name","A superclass for symbols and strings."],["Number","A JavaScript number value (ECMA-262, 4.3.20)"],["NumberObject","A Number object (ECMA-262, 4.3.21)."],["Object","A JavaScript object (ECMA-262, 4.3.3)"],["ObjectTemplate","An ObjectTemplate is used to create objects at runtime."],["OwnedIsolate","Same as Isolate but gets disposed when it goes out of scope."],["Platform",""],["Primitive","The superclass of primitive values. See ECMA-262 4.3.2."],["PrimitiveArray","An array to hold Primitive values. This is used by the embedder to pass host defined options to the ScriptOptions during compilation."],["Private","A private symbol"],["Promise","An instance of the built-in Promise constructor (ES6 draft)."],["PromiseRejectMessage",""],["PromiseResolver",""],["PropertyAttribute",""],["PropertyCallbackArguments",""],["PropertyCallbackInfo","The information passed to a property callback about the context of the property access."],["Proxy","An instance of the built-in Proxy constructor (ECMA-262, 6th Edition, 26.2.1)."],["RegExp","An instance of the built-in RegExp constructor (ECMA-262, 15.10)."],["ReturnValue",""],["RustAllocatorVtable","A wrapper around the V8 Allocator class."],["Script","A compiled JavaScript script, tied to a Context which was active when the script was compiled."],["ScriptOrModule","A container type that holds relevant metadata for module loading."],["ScriptOrigin","The origin, within a file, of a script."],["Set","An instance of the built-in Set constructor (ECMA-262, 6th Edition, 23.2.1)."],["SharedArrayBuffer","An instance of the built-in SharedArrayBuffer constructor."],["SharedPtr","Wrapper around a C++ shared_ptr. A shared_ptr may be be null."],["SharedRef","Wrapper around a C++ shared_ptr. The shared_ptr is assumed to contain a value and may not be null."],["Signature","A Signature specifies which receiver is valid for a function."],["SnapshotCreator","Helper class to create a snapshot data blob."],["StackFrame","A single JavaScript stack frame."],["StackTrace","Representation of a JavaScript stack trace. The information collected is a snapshot of the execution stack and the information remains valid after execution continues."],["StartupData",""],["String","A JavaScript string value (ECMA-262, 4.3.17)."],["StringObject","A String object (ECMA-262, 4.3.18)."],["Symbol","A JavaScript symbol (ECMA-262 edition 6)"],["SymbolObject","A Symbol object (ECMA-262 edition 6)."],["Template","The superclass of object and function templates."],["TryCatch","An external exception handler."],["TypedArray","A base class for an instance of TypedArray series of constructors (ES6 draft 15.13.6)."],["Uint16Array","An instance of Uint16Array constructor (ES6 draft 15.13.6)."],["Uint32","A JavaScript value representing a 32-bit unsigned integer."],["Uint32Array","An instance of Uint32Array constructor (ES6 draft 15.13.6)."],["Uint8Array","An instance of Uint8Array constructor (ES6 draft 15.13.6)."],["Uint8ClampedArray","An instance of Uint8ClampedArray constructor (ES6 draft 15.13.6)."],["UnboundModuleScript","A compiled JavaScript module, not yet tied to a Context."],["UnboundScript","A compiled JavaScript script, not yet tied to a Context."],["UniquePtr","Pointer to object allocated on the C++ heap. The pointer may be null."],["UniqueRef","Pointer to object allocated on the C++ heap. The pointer may not be null."],["Value","The superclass of all JavaScript values and objects."],["ValueDeserializer","ValueDeserializer is a stack object used as entry-point for an owned and pinned heap object ValueDeserializerHeap. The ’a lifetime is the lifetime of the ValueDeserializerImpl implementation. The ’s lifetime is the lifetime of the HandleScope which is used to retrieve a Local<’s, Context> for the CallbackScopes"],["ValueSerializer",""],["WasmMemoryObject",""],["WasmModuleObject",""],["WasmStreaming","The V8 interface for WebAssembly streaming compilation. When streaming compilation is initiated, V8 passes a [Self] object to the embedder such that the embedder can pass the input bytes for streaming compilation to V8."],["WriteOptions",""]],"trait":[["Handle",""],["MapFnTo",""],["ValueDeserializerHelper","Trait used for direct read from the deserialization buffer. Mostly used by the read_host_object callback function in the ValueDeserializerImpl trait to create custom deserialization logic."],["ValueDeserializerImpl","The ValueDeserializerImpl trait allows for custom callback functions used by v8."],["ValueSerializerHelper","Trait used for direct write to the serialization buffer. Mostly used by the write_host_object callback function in the ValueSerializerImpl trait to create custom serialization logic."],["ValueSerializerImpl","The ValueSerializerImpl trait allows for custom callback functions used by v8."]],"type":[["AccessorNameGetterCallback","AccessorNameGetterCallback is used as callback functions when getting a particular property. See Object and ObjectTemplate’s method SetAccessor."],["AccessorNameSetterCallback",""],["BackingStoreDeleterCallback",""],["FunctionCallback",""],["HostImportModuleDynamicallyCallback","HostImportModuleDynamicallyCallback is called when we require the embedder to load a module. This is used as part of the dynamic import syntax."],["HostInitializeImportMetaObjectCallback","HostInitializeImportMetaObjectCallback is called the first time import.meta is accessed for a module. Subsequent access will reuse the same value."],["MessageCallback",""],["NearHeapLimitCallback",""],["PromiseHook",""],["PromiseRejectCallback",""],["ResolveModuleCallback","Called during Module::instantiate_module. Provided with arguments: (context, specifier, import_assertions, referrer). Return None on error."],["SyntheticModuleEvaluationSteps",""]],"union":[["ExternalReference",""]]});