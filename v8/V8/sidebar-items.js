initSidebarItems({"fn":[["assert_initialized",""],["dispose","Releases any resources used by v8 and stops any utility threads that may be running.  Note that disposing v8 is permanent, it cannot be reinitialized."],["dispose_platform","Clears all references to the v8::Platform. This should be invoked after V8 was disposed. If it is called if V8 is not disposed, it will panic."],["get_current_platform","Sets the v8::Platform to use. This should be invoked before V8 is initialized."],["get_version","Get the version string."],["initialize","Initializes V8. This function needs to be called before the first Isolate is created. It always returns true."],["initialize_platform","Sets the v8::Platform to use. This should be invoked before V8 is initialized."],["set_entropy_source","Allows the host application to provide a callback which can be used as a source of entropy for random number generators."],["set_flags_from_command_line","Pass the command line arguments to v8. The first element of args (which usually corresponds to the binary name) is ignored. Returns a vector of command line arguments that V8 did not understand. TODO: Check whether this is safe to do after globally initializing v8."],["set_flags_from_command_line_with_usage","The example code below is here to avoid the V8 usage string and options that are printed to stdout by this function. Placing this here instead of in a test allows the output to be suppressed."],["set_flags_from_string","Sets V8 flags from a string."]],"struct":[["EntropySource","EntropySource is used as a callback function when v8 needs a source of entropy."]],"trait":[["IntoEntropySource",""]]});